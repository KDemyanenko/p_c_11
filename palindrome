fn is_palindrome(x: u32) -> bool {
    let s = x.to_string();
    let reversed_s: String = s.chars().rev().collect();
    
    s == reversed_s
}

fn main() {
    assert_eq!(true, is_palindrome(1237321));
    assert_eq!(false, is_palindrome(1237322));
    
    println!("Число 1237321 є паліндромом: {}", is_palindrome(1237321));
    println!("Число 1237322 є паліндромом: {}", is_palindrome(1237322));
}




Спочатку я написав функцію is_palindrome, яка приймає число x як параметр. 

Я використав метод to_string(), щоб перетворити число в рядок. 

Далі я перевернув рядок, використовуючи chars().rev().collect(). Цей вираз проходить по кожному символу рядка в зворотному порядку.

Після цього я порівняв оригінальний рядок s з перевернутим reversed_s. Якщо вони однакові, то я знаю, що число є паліндромом, і функція повертає true. Якщо ні — повертається false.

У функції main() я протестував цю функцію на двох числах: 1237321, яке є паліндромом, і 1237322, яке не є паліндромом. Я використав assert_eq!, щоб перевірити, що функція повертає правильні значення. 

Також вивів результати на екран, щоб підтвердити, що все працює.
